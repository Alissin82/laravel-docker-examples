services:
  web:
    image: nginx:latest # We don't need to customize the image. Just pass the configuration to the Dockerfile.
    networks:
      - laravel
    volumes:
      - ${LARAVEL_APP_PATH}/nginx.conf:/etc/nginx/nginx.conf:ro  # Mount the nginx.conf file directly
      - ${LARAVEL_APP_PATH}:/var/www
    ports:
      - "${NGINX_PORT}:80"
    environment:
      - NGINX_HOST=${NGINX_HOST}

  php-fpm:
    # For the php-fpm service, we will create a custom image to install the necessary PHP extensions and setup proper permissions.
    build:
      context: ./php-fpm
      dockerfile: Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    env_file:
      - ${LARAVEL_APP_PATH}/.env
    volumes:
      - ${LARAVEL_APP_PATH}:/var/www
    networks:
      - laravel

  workspace:
   # For the workspace service, we will also create a custom image to install and setup all the necessary stuff.
    build:
      context: ./workspace
      dockerfile: Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    tty: true   # Keep the terminal open
    stdin_open: true  # Keep stdin open to attach to the container
    env_file:
      - ${LARAVEL_APP_PATH}/.env
    volumes:
      - ${LARAVEL_APP_PATH}:/var/www
    networks:
      - laravel

  postgres:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - laravel

  redis:
    image: redis:alpine
    networks:
      - laravel

networks:
  laravel:

volumes:
  postgres-data:
