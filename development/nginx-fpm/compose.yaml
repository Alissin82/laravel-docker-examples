services:
  web:
    image: nginx:latest # We don't need to customize the image. Just pass the configuration to the Dockerfile.
    volumes:
      # Mount the application code for live updates
      - ${LARAVEL_APP_PATH}:/var/www
      # Mount the Nginx configuration file
      - ${LARAVEL_APP_PATH}/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      # Map port 80 inside the container to the port specified by 'NGINX_PORT' on the host machine
      - "${NGINX_PORT}:80"
    environment:
      - NGINX_HOST=${NGINX_HOST}
    networks:
      - laravel
    depends_on:
      php-fpm:
        condition: service_started  # Wait for php-fpm to start

  php-fpm:
    # For the php-fpm service, we will create a custom image to install the necessary PHP extensions and setup proper permissions.
    build:
      context: ../../example-app
      dockerfile: ../development/nginx-fpm/php-fpm/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    env_file:
      # Load the environment variables from the Laravel application
      - ${LARAVEL_APP_PATH}/.env
    volumes:
      # Mount the application code for live updates
      - ${LARAVEL_APP_PATH}:/var/www
    ports:
      - "9004:9003"  # Xdebug port
    networks:
      - laravel
    depends_on:
      postgres:
        condition: service_started  # Wait for postgres to start

  workspace:
   # For the workspace service, we will also create a custom image to install and setup all the necessary stuff.
    build:
      context: ../../example-app
      dockerfile: ../development/nginx-fpm/workspace/Dockerfile
      args:
        UID: ${UID}
        GID: ${GID}
    tty: true  # Enables an interactive terminal
    stdin_open: true  # Keeps standard input open for 'docker exec'
    env_file:
      - ${LARAVEL_APP_PATH}/.env
    volumes:
      - ${LARAVEL_APP_PATH}:/var/www
    networks:
      - laravel

  postgres:
    image: postgres:16
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - laravel

  redis:
    image: redis:alpine
    networks:
      - laravel

networks:
  laravel:

volumes:
  postgres-data:
